/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        sums(new ArrayList<>(),root,targetSum,0,result);
        return result;
    }
    public void sums(List<Integer> path,TreeNode root,int targetSum,int sum,List<List<Integer>> result){
        if(root==null){
            return;
        }
        path.add(root.val);
        sum = sum + root.val;

        if(root.left==null && root.right==null && sum==targetSum){
            result.add(new ArrayList<>(path));
        }
        sums(path,root.left,targetSum,sum,result);
        sums(path,root.right,targetSum,sum,result);

        path.remove(path.size()-1);
    }
}
