/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> postorder(Node root) {
        List<Integer> list = new ArrayList<>();
        if(root==null){
            return list;
        }
        Stack<Node> s1 = new Stack<>();
        Stack<Node> s2 = new Stack<>();
        s2.push(root);
        while(!s2.isEmpty()){
            Node curr = s2.pop();
            for(int i = 0;i<curr.children.size();i++){
                s2.push(curr.children.get(i));
            }
            s1.push(curr);
        }
        while(!s1.isEmpty()){
            list.add(s1.pop().val);
        }
        return list;
    }
}
