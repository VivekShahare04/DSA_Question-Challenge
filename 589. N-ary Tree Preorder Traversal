/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution { 
    public List<Integer> preorder(Node root) {
        List<Integer> ls = new ArrayList<>();
        
        if(root==null){
            return ls;
        }
        Stack<Node> list = new Stack<>();
        list.push(root);

        while(!list.isEmpty()){
            Node x = list.pop();
            ls.add(x.val);
            for(int i=x.children.size()-1;i>=0;i--){
               list.push(x.children.get(i));
            }
        }
        return ls;
    }
}
